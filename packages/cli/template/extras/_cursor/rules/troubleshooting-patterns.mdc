---
description: |
globs: 
alwaysApply: false
---
# Troubleshooting and Maintenance Patterns

This rule documents common issues, error patterns, and their solutions in the project.

<rule>
name: troubleshooting_patterns
description: Documents common runtime errors, type errors, and solutions. All data operations MUST use FileMaker Data API exclusively.
filters:
  - type: file_extension
    pattern: "\\.(ts|tsx)$"
  - type: content
    pattern: "(Error|error|ZodError|TypeError|ValidationError|@proofgeist/fmdapi)"

initial_debugging_steps:
  priority: "ALWAYS run `{package-manager} typegen` first for any data-related issues"
  steps:
    - "Run `{package-manager} typegen` to ensure types match FileMaker schema"
    - "Check if error persists after typegen"
    - "If error persists, check console for exact error messages"
    - "Look for patterns in the troubleshooting guide below"
  common_console_errors:
    zod_errors:
      pattern: "ZodError: [path] invalid_type..."
      likely_cause: "Field name mismatch or missing field"
      example: "ZodError: nameFirst expected string, got undefined"
      solution: "Run typegen first, then check field names in FileMaker schema"
    type_errors:
      pattern: "TypeError: Cannot read property 'X' of undefined"
      likely_cause: "Accessing field before data is loaded or field name mismatch"
      solution: "Run typegen first, then add null checks or loading states"
    network_errors:
      pattern: "Failed to fetch" or "Network error"
      likely_cause: "FileMaker connection issues"
      solution: "Run typegen first, then check FileMaker server status and credentials"

data_source_validation:
  requirement: "All data operations must use FileMaker Data API exclusively"
  first_step_for_data_issues: "ALWAYS run `{package-manager} typegen` first"
  common_mistakes:
    - "Attempting to use SQL queries"
    - "Adding direct database connections"
    - "Using local storage for persistent data"
    - "Implementing alternative data stores"
    - "Skipping typegen after FileMaker schema changes"
    - "Using incorrect field names from old schema"
  correct_approach:
    - "Run typegen first"
    - "Use @proofgeist/fmdapi for all data operations"
    - "Follow FileMaker layout and field conventions"
    - "Use layout.create, layout.find, layout.get, layout.update, layout.delete"
    - "Use layout.maybeFindFirst for optional records"

error_patterns:
  field_name_mismatches:
    symptoms:
      - "ZodError: invalid_type at path [fieldName]"
      - "Property 'X' does not exist on type 'Y'"
      - "TypeScript errors about missing properties"
    common_examples:
      - "nameFirst vs firstName"
      - "lastName vs nameLast"
      - "postalCode vs postal_code"
      - "phoneNumber vs phone"
    cause: "Mismatch between component field names and FileMaker schema"
    solution:
      steps:
        - "Run `{package-manager} typegen` to update types"
        - "Look at generated types in src/config/schemas/filemaker/"
        - "Update component field names to match schema"
        - "Check console for exact field name in error"
      files_to_check:
        - "src/config/schemas/filemaker/*.ts"
        - "Component files using the fields"

  zod_validation_errors:
    symptoms:
      - "Runtime ZodError: invalid_type"
      - "Zod schema validation failed"
      - "Property not found in schema"
      - "Unexpected field in response"
    cause: "FileMaker database schema changes not reflected in TypeScript types"
    solution:
      steps:
        - "Run `{package-manager} typegen` to regenerate types from FileMaker schema"
        - "Run `{package-manager} tsc` to identify type mismatches"
        - "Check console for exact error message"
        - "Update affected components and server actions"
      commands:
        - "{package-manager} typegen"
        - "{package-manager} tsc"
      files_to_check:
        - "src/server/actions/*"
        - "src/server/schema/*"
        - "fmschema.config.mjs"

  filemaker_connection:
    symptoms:
      - "ETIMEDOUT connecting to FileMaker"
      - "Invalid FileMaker credentials"
      - "Session token expired"
      - "Layout not found"
      - "Field not found in layout"
      - "Invalid find criteria"
      - "No data appearing or queries returning empty"
    cause: "FileMaker connection, authentication, or query issues"
    solution:
      steps:
        - "Run `{package-manager} typegen` to ensure schema is up to date"
        - "Check FileMaker Server status"
        - "Validate credentials and permissions"
        - "Note: As an AI, you cannot directly check environment variables - always ask the user to verify them if this is determined to be the issue"
        - "Verify layout names and field access"
        - "Check FileMaker query syntax"
      files_to_check:
        - "src/server/lib/fm.ts"
        - "fmschema.config.mjs"

  data_access_errors:
    symptoms:
      - "Invalid operation on FileMaker record"
      - "Record not found"
      - "Insufficient permissions"
      - "Invalid find request"
    cause: "Incorrect FileMaker Data API usage or permissions"
    solution:
      steps:
        - "Run `{package-manager} typegen` to ensure schema is up to date"
        - "Verify FileMaker layout privileges"
        - "Check record existence before operations"
        - "Validate find criteria format"
        - "Use proper FM API methods"
      files_to_check:
        - "src/server/actions/*"
        - "src/server/lib/fm.ts"

  type_errors:
    symptoms:
      - "Type ... is not assignable to type ..."
      - "Property ... does not exist on type ..."
      - "Argument of type ... is not assignable"
    cause: "Mismatch between FileMaker schema and TypeScript types"
    solution:
      steps:
        - "Run `{package-manager} typegen` to regenerate types"
        - "Run `{package-manager} tsc` to identify type mismatches"
        - "Update type definitions if needed"
        - "Check for null/undefined handling"
      commands:
        - "{package-manager} typegen && {package-manager} tsc"

  data_sync_issues:
    symptoms:
      - "Missing fields in table"
      - "Unexpected null values"
      - "Fields showing as blank"
      - "Type mismatches between FM and frontend"
    first_step: "ALWAYS run `{package-manager} typegen` first"
    cause: "Mismatch between FileMaker schema and TypeScript types, or outdated type definitions"
    solution:
      steps:
        - "Run `{package-manager} typegen` to regenerate types from FileMaker schema"
        - "Check for any type errors in the console"
        - "Verify field names match exactly between FM and generated types"
        - "Update components if field names have changed"
      commands:
        - "{package-manager} typegen"
        - "{package-manager} tsc"
      files_to_check:
        - "src/config/schemas/filemaker/*.ts"
        - "fmschema.config.mjs"

maintenance_tasks:
  schema_sync:
    description: "Keep FileMaker schema and TypeScript types in sync"
    frequency: "After any FileMaker schema changes"
    steps:
      - "Run typegen to update types"
      - "Run TypeScript compiler"
      - "Update affected components"
    impact: "Prevents runtime errors and type mismatches"

  type_checking:
    description: "Regular type checking for early error detection"
    frequency: "Before deployments and after schema changes"
    commands:
      - "{package-manager} tsc --noEmit"
    impact: "Catches type errors before runtime"

keywords:
  errors:
    - "ZodError"
    - "TypeError"
    - "ValidationError"
    - "Schema mismatch"
    - "Type mismatch"
    - "Runtime error"
    - "Database schema"
    - "Type generation"
    - "FileMaker fields"
    - "Missing property"
    - "Invalid type"
    - "Layout not found"
    - "Field not found"
    - "Invalid find request"
  solutions:
    - "typegen"
    - "tsc"
    - "type checking"
    - "schema update"
    - "validation fix"
    - "error handling"
    - "FM API methods"
    - "FileMaker layout"
  operations:
    - "layout.create"
    - "layout.find"
    - "layout.get"
    - "layout.update"
    - "layout.delete"
    - "layout.maybeFindFirst"
    - "recordId"
    - "fieldData"
    - "query parameters"
    - "sort options"
  data_source:
    - "FileMaker only"
    - "No SQL"
    - "FM Data API"
    - "Exclusive data source"
    - "@proofkit/fmdapi"

metadata:
  priority: high
  version: 1.0
</rule> 