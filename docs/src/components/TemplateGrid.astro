---
import { Code, Tabs, TabItem } from "@astrojs/starlight/components";

interface Template {
  id: string;
  requireData: boolean;
  label: string;
  hint?: string;
  templatePath: string;
  tags?: string[];
}

interface Props {
  templates: Template[];
}

const { templates } = Astro.props;
---

<div class="template-grid">
  {
    templates.map((template) => (
      <div class="template-card">
        <div class="template-header">
          <h3>{template.label}</h3>
          {!template.requireData && (
            <span class="no-data-badge">No Data Required</span>
          )}
        </div>

        <p class="template-description">
          {template.hint || "A blank page template"}
        </p>

        <div class="template-footer">
          <Tabs syncKey="packageManager">
            <TabItem label="pnpm">
              <Code
                code={`pnpm proofkit add page --template ${template.id}`}
                lang="bash"
                frame="terminal"
              />
            </TabItem>
            <TabItem label="npm">
              <Code
                code={`npm run proofkit add page --template ${template.id}`}
                lang="bash"
                frame="terminal"
              />
            </TabItem>
            <TabItem label="yarn">
              <Code
                code={`yarn proofkit add page --template ${template.id}`}
                lang="bash"
                frame="terminal"
              />
            </TabItem>
          </Tabs>

          {template.tags && template.tags.length > 0 && (
            <div class="template-tags">
              {template.tags.map((tag) => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )}
        </div>
      </div>
    ))
  }
</div>

<style>
  .template-grid {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin-top: 2rem;
  }

  .template-card {
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.5rem;
    padding: 1.5rem;
    background-color: var(--sl-color-black);
    display: flex;
    flex-direction: column;
  }

  .template-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .template-header h3 {
    margin: 0;
    font-size: 1.25rem;
    color: var(--sl-color-white);
  }

  .no-data-badge {
    font-size: 0.75rem;
    background-color: var(--sl-color-green-high);
    color: var(--sl-color-green-low);
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    white-space: nowrap;
    font-weight: 500;
  }

  .template-description {
    font-size: 0.875rem;
    color: var(--sl-color-gray-3);
    margin-bottom: 1.5rem;
  }

  .template-footer {
    margin-top: auto;
  }

  .template-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .tag {
    font-size: 0.75rem;
    background-color: var(--sl-color-gray-6);
    color: var(--sl-color-gray-2);
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
  }
</style>
