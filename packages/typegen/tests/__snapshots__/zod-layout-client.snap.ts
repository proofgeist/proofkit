/**
 * Generated by @proofkit/typegen package
 * https://proofkit.dev/docs/typegen
 * DO NOT EDIT THIS FILE DIRECTLY. Changes may be overritten
 */
import { z } from "zod";
import { InferZodPortals } from "@proofkit/fmdapi";

// @generated
// prettier-ignore
/* eslint-disable */
export const Ztest = z.object({
        "related::related_field": z.string(),
        "related::recordId": z.coerce.number().nullable().catch(null),
    });

export type Ttest = z.infer<typeof Ztest>;

export const ZVLYesNo = z.enum(["Yes", "No"]);

export type TVLYesNo = z.infer<typeof ZVLYesNo>;

export const ZtestLayout = z.object({
  anything: z.string(),
  recordId: z.coerce.number().nullable().catch(null),
  fieldWithValues: z.enum(["Yes", "No", ""]).catch(""),
  booleanField: z.coerce.number().nullable().catch(null),
  CreationTimestamp: z.string(),
});

export type TtestLayout = z.infer<typeof ZtestLayout>;

export const ZtestLayoutPortals = {
  test: Ztest,
};

export type TtestLayoutPortals = InferZodPortals<typeof ZtestLayoutPortals>;

export const layoutName = "layout";
